@startuml
package "Modèle entité-association (MEA)" {
    entity Drone {
        + id INT (PK)
        drone_name VARCHAR
        drone_type VARCHAR
        drone_status VARCHAR
        drone_position_x FLOAT
        drone_position_y FLOAT
        drone_position_z FLOAT
    }

    entity Navire {
        + id INT (PK)
        navire_name VARCHAR
        navire_type VARCHAR
        navire_status VARCHAR
        navire_position_x FLOAT
        navire_position_y FLOAT
        navire_position_z FLOAT
    }

    entity Rapport {
        + id INT (PK)
        rapport_name VARCHAR
        rapport_description TEXT
        rapport_date DATETIME
    }

    entity Rapport_Drone {
        + id INT (PK)
        rapport_id INT (FK)
        drone_id INT (FK)
    }
    note right of Rapport_Drone
    Remplace un losange pour représenter la relation entre Rapport et Drone
    end note

    entity Liste_Instruction {
        + id INT (PK)
        + rapport_drone_id INT (FK)
        liste_instruction_name VARCHAR
        liste_instruction_type VARCHAR
        liste_instruction_date DATETIME
    }

    entity Instruction {
        + id INT (PK)
        instruction_name VARCHAR
        instruction_type VARCHAR
        instruction_date DATETIME
        instruction_description VARCHAR
    }

    Drone "0" -- "n" Rapport_Drone : génère
    Rapport "0" -- "n" Rapport_Drone : participe à
    Navire "1" -- "n" Rapport : concerne

    Rapport_Drone "1" -- "n" Liste_Instruction : contient
    Liste_Instruction "1" -- "n" Instruction : contient
}
@enduml




@startuml
package "DC L2 Client" #EEEEEE {
    package "Data" #FFFFFF {
        class Simulation {
            - id : int
            - terrain: int
            - client : Client
            - unite : list<Unité>
            - unite_adverse : list<Unité>
        }

        class Unité {
            - drones: list<Drone>
            - sousmarins: list<SousMarin>
        }

        class SousMarin {
            - cap : tuple
            - position : tuple
            - mode : int 
            - dronesAlloués: int
            + attaquer()
            + changer_cap()
            + ecouter()
            + blanchir()
            + afficher_position()
        }

        class Drone {
            - id : int 
            - num_serie : int
            - position : tuple 
            - cap : tuple 
            + envoyer_position()
            + prise_image()
            + prise_son()
            + retour()
            + exploser()
            + reperage()
        }
    }
    
    package "GUI" #FFFFFF {
        class Client {
            - id: int 
            - port : int 
            - addr : int 
            - num_simulation: int
            + envoyer_drone(id)
            + gerer_modeActionSM()
            + generer_rapport()
            + cloturer_mission()
        }
    }
    
    package "Data_Access_Object" #FFFFFF {
        
    }
    
    package "Controler" #FFFFFF {
        class ControleurClient {
            + recuperer_donnees()
            + mettre_a_jour_simulation()
        }
    }
    
    package "Net" #FFFFFF {
    }
    
    package "DB_Manager" #FFFFFF {
        class BD {
            - addr : string
            - port : int 
            - cle : string
            - type_requete : list
            + acces_rapport()
            + enregistrer_rapport()
            + envoyer_requete(type_requete)
        }
    }
    
    package "Messages" #FFFFFF {
    }
    
    package "I18N" #FFFFFF {
    }

    note right of Messages
    Common
    end note
    note right of Data
    Common
    end note
    note right of GUI
    Common
    end note

   
}


 GUI --> I18N
    GUI --> Controler
    Controler --> GUI
    Controler --> Data
    Data_Access_Object --> Data
    Data_Access_Object --> DB_Manager
    Net --> Messages

Simulation *- Unité
Unité *-- Drone
Unité *-- SousMarin
SousMarin o-- Drone
@enduml






@startuml


   



    



package "DC L2 Serveur" #EEEEEE
{
    package "Data" #FFFFFF
    {

    class Simulation {
        - id : int
        - terrain: int
        - client : Client
        - unite : list<Unité>
        - unite_adverse : list<Unité>
    }

    class Unité {
        - drones: list<Drone>
        - sousmarins: list<SousMarin>
    }

    class SousMarin {
        - cap : tuple
        - position : tuple
        - mode : int 
        - dronesAlloués: int
        + attaquer()
        + changer_cap()
        + ecouter()
        + blanchir()
        + afficher_position()
    }

    class Drone {
        - id : int 
        - num_serie : int
        - position : tuple 
        - cap : tuple 
        + envoyer_position()
        + prise_image()
        + prise_son()
        + retour()
        + exploser()
        + reperage()
    }

    class Sitac{
        - id_terrain : int
        - billes_vertes : list<SousMarin>
        - billes_rouges : list<SousMarin>
        - cones_verts : list<Drone>
        - cones_rouges : list<Drone>
        + afficher_positions_drones(unite: drones)
        + afficher_positions_sousmarins(unite: sousmarin)
        + afficher_positions_drones_adverse(unite: drones)
        + afficher_positions_sousmarins_adverse(unite: sousmarin)
    }

Simulation *- Unité
Unité *-- Drone
Unité *-- SousMarin
SousMarin o-- Drone

    Sitac *-- Drone
    Sitac *-- SousMarin

    }

    package "GUI" #FFFFFF
    {
        class Serveur {
        - id : int
        - port: int 
        - addr : string
        - controleur : ControleurServeur
        + consulter_rapport_mission()
        + creer_unite()
        + cree_simulation()
        + lancer_simulation()
    }

    }

    package "I18N" #FFFFFF
    {
    }

    package "Data_Access_Object" #FFFFFF
    {
    }

    package "Controler" #FFFFFF
    {
        class ControleurClient {
            + recuperer_donnees()
            + mettre_a_jour_simulation()
        }
    }

    package "Net" #FFFFFF
    {
    }

    package "DB_Manager" #FFFFFF
    {
        class BD {
            - addr : string
            - port : int 
            - cle : string
            - type_requete : list
            + acces_rapport()
            + enregistrer_rapport()
            + envoyer_requete(type_requete)
        }
    }

    package "Messages" #FFFFFF
    {
    }

    note right of Messages
    Common
    end note
    note right of I18N
    Common
    end note

    GUI --> I18N
    GUI --> Controler
    Controler --> GUI
    Controler --> Data
    Data_Access_Object --> Data
    Data_Access_Object --> DB_Manager
    Net --> Messages
}

@enduml





@startuml
package "Modèle entité-association (MEA)" {
    entity Drone {
        + id INT (PK)
        drone_name VARCHAR
        drone_type VARCHAR
        drone_status VARCHAR
        drone_position_x FLOAT
        drone_position_y FLOAT
        drone_position_z FLOAT
    }

    entity Navire {
        + id INT (PK)
        navire_name VARCHAR
        navire_type VARCHAR
        navire_status VARCHAR
        navire_position_x FLOAT
        navire_position_y FLOAT
        navire_position_z FLOAT
    }

    entity Rapport {
        + id INT (PK)
        rapport_name VARCHAR
        rapport_description TEXT
        rapport_date DATETIME
    }

    entity Rapport_Drone {
        + id INT (PK)
        rapport_id INT (FK)
        drone_id INT (FK)
    }
    note right of Rapport_Drone
    Remplace un losange pour représenter la relation entre Rapport et Drone
    end note

    entity Liste_Instruction {
        + id INT (PK)
        + rapport_drone_id INT (FK)
        liste_instruction_name VARCHAR
        liste_instruction_type VARCHAR
        liste_instruction_date DATETIME
    }

    entity Instruction {
        + id INT (PK)
        instruction_name VARCHAR
        instruction_type VARCHAR
        instruction_date DATETIME
        instruction_description VARCHAR
    }

    Drone "0" -- "n" Rapport_Drone : génère
    Rapport "0" -- "n" Rapport_Drone : participe à
    Navire "1" -- "n" Rapport : concerne

    Liste_Instruction "1" -- "n" Instruction : contient
    Rapport_Drone "1" -- "n" Liste_Instruction : contient
}
@enduml



